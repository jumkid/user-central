# IDENTITY (ContextIdApplicationContextInitializer)
spring.application.name = user-central
spring.application.version = @project.version@
spring.application.description = user central spring boot service
spring.application.title = Restful API

# enable spring boot actuator endpoints
management.endpoints.web.exposure.include = *

# spring boot profiles
spring.profiles.active = production

# ----------------------------------------
# APPLICATION SERVER PROPERTIES
# ----------------------------------------
server.port = 8086
server.servlet.context-path = /
server.ssl.enabled = false
server.ssl.key-store = ../keystore.p12

# Whether response compression is enabled.
server.compression.enabled = false
server.servlet.encoding.force = true
server.servlet.encoding.charset = UTF-8

# Comma-separated list of MIME types that should be compressed.
server.compression.mime-types = text/html,text/xml,text/plain,text/css,text/javascript,application/javascript

# Minimum "Content-Length" value that is required for compression to be performed.
server.compression.min-response-size = 2048

# ----------------------------------------
# Database Migration
# ----------------------------------------
spring.flyway.enabled = true

# ----------------------------------------
# MySQL DataSource
# ----------------------------------------
spring.datasource.driverClassName = com.mysql.cj.jdbc.Driver
spring.datasource.url = ${MYSQL_DATABASE_CONNECTION}
spring.datasource.username = ${MYSQL_DB_USERNAME}
spring.datasource.password = ${MYSQL_DB_PASSWORD}

# spring JPA
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto = none
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQLDialect
spring.jpa.properties.hibernate.default_schema = usercentral
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl

# logging
logging.file.path = /opt/user-central/logs
logging.level.root = WARN
logging.level.org.springframework.security = INFO
logging.level.com.jumkid.share = INFO
logging.level.com.jumkid.usercentral = TRACE
logging.pattern.console = %d{yy-MM-dd E HH:mm:ss.SSS} [%p] [JID %X{Journey-ID}] --- %logger{0} \\t:\\t %m\\n

# ----------------------------------------
# jumkid security properties
# ----------------------------------------
# enable spring security token filter
com.jumkid.jwt.token.enable = true
com.jumkid.jwt.token.validate = false
com.jumkid.jwt.token.client-id = ${KEYCLOAK_CLIENT_ID}
com.jumkid.jwt.token.fetch-url = http://${KEYCLOAK_HOST}:${KEYCLOAK_PORT}/realms/jumkid/protocol/openid-connect/token/introspect
com.jumkid.jwt.token.introspect-url = http://${KEYCLOAK_HOST}:${KEYCLOAK_PORT}/realms/jumkid/protocol/openid-connect/userinfo
com.jumkid.api.user-info = http://${API_GATEWAY_HOST}:${API_GATEWAY_PORT}/v1/user
# ----------------------------------------
# internal apis
# ----------------------------------------
# user profile api
internal.api.user = http://localhost/v1/user

# ----------------------------------------
# KAFKA PROPERTIES
# ----------------------------------------
spring.kafka.bootstrap-servers = ${KAFKA_HOST}:${KAFKA_PORT}
spring.kafka.topic.name.activity.notify = activity.notify
spring.kafka.topic.name.activity.delete = activity.delete
spring.kafka.consumer.group-id = 1